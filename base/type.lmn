/*

Types system.

TODO: Make types safe with gensym.

*/

// Interface
def make_type
def make_instance_of_type
def isa
def get_value_of_instance
def typeof

{
  // Utility
  def check_structure_of_type = @(type) {
    ([valuetype type] != :symbol ?
     [error "Invalid type structure. Expected symbol."])
  }
  
  def check_structure_of_instance = @(ins) {
    ([valuetype ins] != :array ? [error "Invalid instance structure. Expected array."]
     [sizeof ins] != 2 ? [error "Invalid instance structure. Expected array size of 2."])
  
    def type_symbol = [aget ins 0]
    ([valuetype type_symbol] != :symbol ?
     [error "Invalid instance structure. Expected symbol at first index."])
  }

  // Set interface
  make_type = @(type) {
    ([valuetype type] != :symbol ?
     [error "Type input is not a symbol."])
  
    type
  }
  
  make_instance_of_type = @(type val) {
    [check_structure_of_type type]
    [# type val]
  }
  
  isa = @(ins type) {
    [check_structure_of_instance ins]
    [check_structure_of_type type]
  
    def type_symbol = [aget ins 0]
    [same type_symbol type]
  }
  
  get_value_of_instance = @(ins) {
    [check_structure_of_instance ins]
    [aget ins 1]
  }

  typeof = @(ins) {
    [check_structure_of_instance ins]
    [aget ins 0]
  }

}