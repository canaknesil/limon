#include "value.h"

#include <stdio.h>

void testIntVal()
{
	void *val1 = IntVal_FromString("12");
	void *val2 = IntVal_FromString("4");
	
	void *sum = IntVal_Add(val1, val2);
	
	printValue(val1);
	printValue(val2);
	printValue(sum);
	
	if (checkValueType(IntVal, sum)) printf("YES\n");

	deleteValue(val1);
	deleteValue(val2);
	deleteValue(sum);
}


void testBoolVal()
{
	void *b1 = newValue(BoolVal, TRUE);
	void *b2 = newValue(BoolVal, FALSE);
	void *b3 = BoolVal_And(b1, b2);
	
	printValue(b1);
	printValue(b2);
	printValue(b3);
	
	deleteValue(b1);
	deleteValue(b2);
	deleteValue(b3);
}

void testProcVal()
{
	int body = 1;
	int env = 2;
	void *proc = newValue(ProcVal, "x", &body, &env);
	
	printValue(proc);
	printf("%s\n", (char *) ProcVal_GetBVarList(proc));
	printf("%d\n", *(int *) ProcVal_GetBody(proc));
	printf("%d\n", *(int *) ProcVal_GetEnv(proc));
	
	deleteValue(proc);
}


void testArrayVal()
{
	int a = 3;
	int b = 2;

	void * arr = newValue(ArrayVal, 2);
	ArrayVal_Set(arr, 0, &a);
	ArrayVal_Set(arr, 1, &b);

	int *a1, *b1;
	ArrayVal_Get(arr, 0, (void **) &a1);
	ArrayVal_Get(arr, 1, (void **) &b1);

	printf("%d %d\n", *a1, *b1);
}

int main()
{
	testIntVal();
	testBoolVal();	
	testProcVal();
	testArrayVal();

	return 0;
}
